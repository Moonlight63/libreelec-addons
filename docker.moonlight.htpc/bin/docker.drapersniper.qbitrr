#!/bin/sh

. /etc/profile
oe_setup_addon docker.moonlight.htpc
# . $ADDON_DIR/bin/docker.htpc.setup

name="qbitrr"

DOCKERIMAGE="drapersniper/qbitrr"

docker rm "$name" 2>/dev/null
docker pull "$DOCKERIMAGE":v2.5.5
docker rmi $(docker images | grep "$DOCKERIMAGE" | grep '<none>' | sed 's/\s\+/\t/g' | cut -f3) 2> /dev/null


# $(cat "${V_data}/configs/sonarr/config.xml" | tr -d "\t\n\r" | sed -r 's/.*<ApiKey>(.*)<\/Api.*/\1/')
while [ ! -f "${V_data}/configs/sonarr/config.xml" ]; do sleep 5; done

SONARRKEY=$(cat "${V_data}/configs/sonarr/config.xml" | tr -d "\t\n\r" | sed -e 's/.*\<ApiKey>\(.*\)<\/Api.*/\1/')

while [ ! -f "${V_data}/configs/radarr/config.xml" ]; do sleep 5; done

RADARRKEY=$(cat "${V_data}/configs/radarr/config.xml" | tr -d "\t\n\r" | sed -e 's/.*\<ApiKey>\(.*\)<\/Api.*/\1/')

[ ! -f ${ADDON_DIR}/bin/jq ] && curl -L "https://github.com/stedolan/jq/releases/download/jq-1.6/jq-linux64" -o ${ADDON_DIR}/bin/jq
chmod +x ${ADDON_DIR}/bin/jq

USEOMBI=false
OMBIKEY=false
if [ -f "${V_data}/configs/ombi/OmbiSettings.db" ]; then
  OmbiSettings=$(sqlite3 ${V_data}/configs/ombi/OmbiSettings.db "SELECT Content FROM GlobalSettings WHERE Id=1")
  OMBIKEY=$(echo $OmbiSettings | ${ADDON_DIR}/bin/jq '.ApiKey')
  USEOMBI=true
fi


curl --location --request POST 'http://ombi:3579/api/v1/Job/arrAvailability' --header 'ApiKey: <OMBI API>' --header 'Content-Length: 0'


# if [ ! -d "${V_data}/configs/scanner" ]; then
#   mkdir "${V_data}/configs/scanner"
# fi

# rm -rf "${V_data}/configs/scanner/*"

# touch "${V_data}/configs/scanner/sonarr"
# touch "${V_data}/configs/scanner/radarr"


# cat << EOF > "${V_data}/configs/scanner/sonarr"
# {
#   "URL": "http://sonarr:8989",
#   "Interval": 1440,
#   "ScanOnWake": true,
#   "ScanOnInterval": true,
#   "ScanOnStart": true,  
#   "ForceImport": false,
#   "ForceImportInterval": 1,
#   "ForceImportMode": "Copy",
#   "APIKey": "${SONARRKEY}"
# }
# EOF


# cat << EOF > "${V_data}/configs/scanner/radarr"
# {
#   "URL": "http://radarr:7878",
#   "Interval": 1440,
#   "ScanOnWake": true,
#   "ScanOnInterval": true,
#   "ScanOnStart": true,
#   "APIKey": "${RADARRKEY}"
# }
# EOF

template="$(cat ${ADDON_DIR}/configs/qbitrr.config.toml.template)"
template=$(sed 's/\([^\\]\)"/\1\\"/g; s/^"/\\"/g' <<< "$template")

eval "echo \"${template}\"" >> ${V_data}/configs/qbitrr/qBitManager/config.toml

docker run --name="$name" \
      -e PUID="$E_PUID" \
      -e PGID="$E_PGID" \
      -v "${V_data}/configs/qbitrr":/config/.config/ \
      -v "${V_data}/downloads/qbittorrent":/downloads \
      -v "${V_data}/configs/sonarr/sonarr.db":/databases/sonarr.db:ro \
      -v "${V_data}/configs/radarr/radarr.db":/databases/radarr.db:ro \
      -v /etc/localtime:/etc/localtime:ro \
      --net=htpc \
      "$DOCKERIMAGE":v2.5.5
