#!/bin/sh

. /etc/profile
oe_setup_addon docker.moonlight.htpc

echo $ADDON_DIR

case $1 in
  'start')
    echo "Creating network"
    docker network create --driver bridge htpc || true

    systemctl enable "${ADDON_DIR}/system.d/docker.linuxserver.plex.service"
    systemctl enable "${ADDON_DIR}/system.d/docker.linuxserver.bazarr.service"
    systemctl enable "${ADDON_DIR}/system.d/docker.linuxserver.sonarr.service"
    systemctl enable "${ADDON_DIR}/system.d/docker.linuxserver.radarr.service"
    systemctl enable "${ADDON_DIR}/system.d/docker.linuxserver.prowlarr.service"
    systemctl enable "${ADDON_DIR}/system.d/docker.linuxserver.overseerr.service"

    if [ "$use_vpn" = "true" ]; then
      systemctl enable "${ADDON_DIR}/system.d/docker.haugene.transmission.service"
      systemctl enable "${ADDON_DIR}/system.d/docker.transmission.proxy.service"
    else
      systemctl enable "${ADDON_DIR}/system.d/docker.linuxserver.transmission.service"
    fi
    
    chmod +x "${ADDON_DIR}/bin"/*

    systemctl start "docker.linuxserver.plex.service"
    systemctl start "docker.linuxserver.bazarr.service"
    systemctl start "docker.linuxserver.sonarr.service"
    systemctl start "docker.linuxserver.radarr.service"
    systemctl start "docker.linuxserver.prowlarr.service"
    systemctl start "docker.linuxserver.overseerr.service"

    if [ "$use_vpn" = "true" ]; then
      systemctl start "docker.haugene.transmission.service"
      systemctl start "docker.transmission.proxy.service"
    else
      systemctl start "docker.linuxserver.transmission.service"
    fi

    ;;
  'stop')
    systemctl stop "docker.linuxserver.plex.service"
    systemctl stop "docker.linuxserver.bazarr.service"
    systemctl stop "docker.linuxserver.sonarr.service"
    systemctl stop "docker.linuxserver.radarr.service"
    systemctl stop "docker.linuxserver.prowlarr.service"
    systemctl stop "docker.linuxserver.overseerr.service"

    if [ "$use_vpn" = "true" ]; then
      systemctl stop "docker.haugene.transmission.service"
      systemctl stop "docker.transmission.proxy.service"
    else
      systemctl stop "docker.linuxserver.transmission.service"
    fi


    systemctl disable "docker.linuxserver.plex.service"
    systemctl disable "docker.linuxserver.bazarr.service"
    systemctl disable "docker.linuxserver.sonarr.service"
    systemctl disable "docker.linuxserver.radarr.service"
    systemctl disable "docker.linuxserver.prowlarr.service"
    systemctl disable "docker.linuxserver.overseerr.service"

    if [ "$use_vpn" = "true" ]; then
      systemctl disable "docker.haugene.transmission.service"
      systemctl disable "docker.transmission.proxy.service"
    else
      systemctl disable "docker.linuxserver.transmission.service"
    fi

    echo "Removing Network"
    docker network rm htpc
    ;;
  'reload')
    systemctl restart "docker.linuxserver.plex.service"
    systemctl restart "docker.linuxserver.bazarr.service"
    systemctl restart "docker.linuxserver.sonarr.service"
    systemctl restart "docker.linuxserver.radarr.service"
    systemctl restart "docker.linuxserver.prowlarr.service"
    systemctl restart "docker.linuxserver.overseerr.service"

    if [ "$use_vpn" = "true" ]; then
      systemctl restart "docker.haugene.transmission.service"
      systemctl restart "docker.transmission.proxy.service"
    else
      systemctl restart "docker.linuxserver.transmission.service"
    fi
    
    ;;
  *)
esac